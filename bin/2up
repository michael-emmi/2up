#!/usr/bin/env bash

margin=20
paper=letter

function gsbbox {
  local file=$1
  gs -sDEVICE=bbox -dNOPAUSE -dBATCH $file 2>&1 | grep "%%BoundingBox" | cut -d' ' -f 2-5
}

function filter {
  local file=$1
  local selection=$2
  pdfjam $file $selection > /dev/null 2>&1
}

function crop {
  local file=$1
  local bbox=$2

  if [[ -z $bbox ]]
  then
    pdfcrop $file --margins $margin > /dev/null
  else
    pdfcrop $file --margins $margin --bbox "$bbox" > /dev/null
  fi

}

function join {
  local files=$@
  pdfjoin $files --rotateoversize false --paper $paper > /dev/null 2>&1
}

function nup {
  local file=$1
  pdfnup $file --paper $paper > /dev/null 2>&1
}

function split {
  local file=$1
  local selections=${@:2}

  for selection in $selections
  do
    filter $file $selection
  done
}

function bbox {
  local file=$1
  local selection=$2
  filter $file $selection
  gsbbox ${file/.pdf/-$selection-pdfjam.pdf}
}

function simple_compose {
  local file=$1
  crop $file
  nup *-crop.pdf
}

function complex_compose {
  local file=$1
  local selections=$2
  local outliers=$3
  local keypage=$4
  local box=$(bbox $in $keypage)

  split $file $selections
  for selection in $selections
  do
    case $outliers in
    *"$selection"*)
      crop ${file/.pdf/-$selection-pdfjam.pdf} "$box"
      ;;
    *)
      crop ${file/.pdf/-$selection-pdfjam.pdf}
      ;;
    esac
  done
  join *-crop.pdf
  nup *-joined.pdf
}

function compose {
  local file=$1

  # TODO compute selections, outliers, key pages automatically
  # complex_compose $(basename $file) "1-1 2-" "1-1" "2"

  simple_compose $file
}

function main {
  local in=$1
  local file=$(basename $in)
  local dir=$(mktemp -d)

  trap "rm -rf $dir" EXIT
  cp $in $dir
  pushd $dir > /dev/null
  compose $file
  popd > /dev/null
  cp $dir/*-nup.pdf ${file/.pdf/.2up.pdf}
}

set -e
main $@
